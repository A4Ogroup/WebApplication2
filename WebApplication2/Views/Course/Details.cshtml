@using System.Security.Claims
@model CourseDetailsViewModel
@inject LconsultDBContext _context

@{
    var Id = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
<partial name="_NotificationPartial" ></partial>



@* @{

    var review = _context.Reviews.Select(r => new
    {
        r.ReviewId,
        r.RatingDate,
        r.Student,
        r.Rate,
        r.Descritipn,
        r.MaterialQuality,
        r.ContentQuality,
        r.SupportQuality,
        r.TechnicalQuality,
        r.EngagementLevel,
        r.OverAllSatisfication,
        V = r.GetFormattedDate(r.RatingDate.Value),
        
    }).ToList();


} *@
@{
    Layout = "_Layout";

    
}
<!-- Page Content -->
<head>
    <style>

    .course-reviews {
        background-color: white;
        padding: 20px;
        border-radius: 4px;
        margin: 10px; /* Adjusted for inner spacing */
        max-width: calc(50% - 20px); /* Allows 3 cards per row with spacing */
        /**/
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        flex: 1 1 calc(50% - 20px); /* Allows 3 cards per row */
        box-sizing: border-box;
    }

    .title {
        color: #f00;
        font-size: 18px;
        font-weight: bold;
    }

    .rating-summary {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .rating-summary .stars {
        color: #f00;
    }

    .review-card {
        margin-bottom: 10px;
    }

    .review-card .stars {
        color: #f00;
    }

    .checked {
        color: red;
    }

    /* Flexbox container for review cards */
    .reviews-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        margin: -10px; /* Adjust for inner padding */
    }

    /* Inner padding for review cards */
    .reviews-container > .course-reviews {
        margin: 10px;
    }

    /* Responsive styles */
    @@media (max-width: 992px) {
        .course-reviews {
            flex: 1 1 calc(50% - 20px); /* 2 cards per row */
        }
    }

    @@media (max-width: 768px) {
        .course-reviews {
            flex: 1 1 calc(100% - 20px); /* 1 card per row */
        }
    }

    /* Ensure the footer is not overlapped */
    .footer {
        clear: both;
        position: relative;
        z-index: 10;
    }

    .container, .row, .padding {
        overflow: inherit;
    }
        .checked {
        color: red;
        }

        .description {
            display: inline;
        }

        .more-text {
            display: none;
        }

        .see-more {
            color: blue;
            cursor: pointer;
        }

        .progress-container {
            width: 100%;
            background-color: #f3f3f3;
            border-radius: 5px;
            margin-top: 10px;
            height: 10px;
        }

        .progress-bar {
            height: 10px;
            background-color: #4caf50;
            border-radius: 5px;
            width: 0;
        }

        .banner-item-1 {
            padding: 50px;

        }

        .hero-section {
            background-color: black;
            color: white;
            padding: 40px 20px;
            margin-top:-20px;
            text-align: center;
        }

            .hero-section h1 {
                font-size: 2rem;
                margin-bottom: 20px;
            }

            /* .hero-section .rating {
                color: #f00;
            } */

            .hero-section .btn {
                background-color: #f00;
                border: none;
                color: white;
                margin-top: 20px;
            }

        .course-attributes {
            list-style: none;
            padding: 0;
        }

            .course-attributes li {
                margin-bottom: 10px;
            }

                .course-attributes li strong {
                    display: block;
                    color: #555;
                }

                .course-attributes li span {
                    color: #333;
                }

        .tr-clickable {
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .tr-clickable:hover {
                background-color: #00000;
            }

        .sidebar {
            padding-right: 20px;
            border-right: 1px solid #ddd;
        }

        .filter-section {
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }

            .filter-section h4 {
                cursor: pointer;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

                .filter-section h4:hover {
                    color: #007acc;
                }

            .filter-section svg {
                transition: transform 0.2s;
            }

        .filter-options {
            display: none;
            margin-top: 10px;
        }

        .fa-star {
            color: #ff0000;
        }

        .fa-star-o {
            color: red; /* Changes the color of the star outline to red */
        }

        @@media (max-width: 992px) {
            .filter-toggle {
                display: block;
            }

            .sidebar {
                border-right: none;
            }
        }
       </style>
       </head>

<div class="header-text">
    <div class="owl-banner owl-carousel">
        <div class="banner-item-1">
        </div>
    </div>
</div>

<div class="how-section1" >
    <div class="hero-section">
        <input hidden asp-for="@Model.Course.CourseId" />
        <div class="d-flex justify-content-center align-content-center flex-row flex-wrap" style="justify-content:center !important;">
            <div class="col-md-4 how-img">

                @if (Model.Course.Picture is null)
                {

                    Model.Course.Picture = "noimage.png";

                }<a href="#"><img src="~/images/courses/@Model.Course.Picture" alt="" class="img-fluid" alt="" style="margin-bottom:12px;"></a>
                @* <img src="~/images/product_01.jpg" class="rounded-circle img-fluid" alt="" style="margin-bottom:12px;" />  *@
                
            </div>
            <div class="container" style="overflow:inherit !important;">
                <h1>
                    @Model.Course.Title
                </h1>
                <p style="color:white;">
                    @Model.Course.CourseDescription
                </p>
                <p style="color:white;">
                    <span class="rating">
                        @{
                            double fraction = @Model.Course.AverageRating.Value % 1;
                            for (int i = 1; i <= Model.Course.AverageRating; i++)
                            {

                                <i class="fa fa-star" style="color:red;"></i>
                            }
                            if (fraction > 0.0)
                            {
                                <i class="fa fa-star-half-empty" style="color:red;"></i>

                            }
                            for (int i = 5; i > (int)Math.Ceiling(Model.Course.AverageRating.Value) && i > 0; i--)
                            {
                                <i class="fa fa-star-o" style="color:red;"></i>
                            }

                        }
                    </span>
                    <span>@Model.Course.AverageRating (@Model.Course.Reviews.Count().ToString() Reviews)</span> @if (!User.IsInRole("instructor"))
                    {
                        
                                  <span class="tr-clickable" onclick="location.href='@Url.Action("viewprofile", "instructor", new { instructorId = Model.Course.InstructorId })'"> - instructor: @Model.Course.InstructorFullName</span>
                     
                    }
                    <span class="badge text-bg-primary" style="background-color:blue">@(Model.Course.Claimed ? "Claimed" : "Not Claimed")</span>


                    @if (User.IsInRole("Instructor") && !Model.Course.Claimed)
                    {
                        <a href="#" id="show-claim-form" class="btn btn-link">Claim this course</a>

                        <div id="claim-form" style="display: none;">
                            <form asp-action="SubmitClaim" method="post">
                                <div class="form-group">
                                    <label for="Reason">Reason for Claim</label>
                                    <textarea id="Reason" name="Reason" class="form-control" style="max-width:50%; margin-left:300px;" required></textarea>
                                </div>
                                <input type="hidden" name="CourseId" value="@Model.Course.CourseId" />
                                <button type="submit" class="btn btn-primary">Submit Claim</button>
                            </form>
                        </div>
                    }

                </p>
                @if(!User.IsInRole("Instructor")){
                    <a asp-controller="Review" asp-action="AddReview" asp-route-Id="@Model.Course.CourseId" ><button class="btn btn-lg">Review Now</button></a>
                } 
            </div>

        </div>
    </div>
    <div class="container">
        <div class="row mt-4">
            <div class="col-md-8">
                <h5>About Course</h5>
                <p>
                    @Model.Course.CourseDescription
                </p>
                <h6>Topics covered</h6>
                <ul style="list-style:disc;"> 
                    @{
                        var topics = @Model.Course.TopicsCovered?.Split(";");
                        foreach(var topic in topics)
                        {
                            <li>@topic</li>
                            
                        }
                    }
                    
                </u>
            </div>
            <div class="col-md-4">
                <ul class="course-attributes">
                    <li><strong>Total Hours:</strong> <span>@Model.Course.CourseDuration +</span></li>
                    <li><strong>Platform:</strong> <span>@Model.Course.Platform</span>  >> <a href="@Model.Course.Link" target="_blank">@Model.Course.Platform</a></li>
                    <li>
                        <strong>Cost Status:</strong> 
                        @if (Model.Course.PriceStatus is true)
                        {
                            <span> Free </span>
                        }
                        else
                        {
                            <span>Paid  </span>
                        }
                    </li>
                    <li><strong>Level:</strong> <span>@Model.Course.Level</span></li>
                    <li><strong>Language:</strong> <span>@Model.Course.Language.Name</span></li>
                    <li>
                        <strong>Average video duration:</strong>
                        <span>@Html.DisplayFor(m=>Model.Course.VedioLength)</span>
                    </li>
                    <li>
                        <strong>Last Updated:</strong> <span>@Model.Course.LastUpdate </span>
                    </li>
                </ul>
            </div>
        </div>
           
        <div class="row">
            <div class="down-content">
                <hr  style="margin:50px 0;"/>
                <h3>Average Ratings</h3>
                <br />
                <ul>
                    <h4 class="text-muted small">Material Quality</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageMaterialQuality / 10.0) * 100)%"></div>
                    </div>
                    <h4 class="text-muted small">Content Quality</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageContentQuality / 10.0) * 100)%"></div>
                    </div>
                    <h4 class="text-muted small">Engagement Level</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageEngagementLevel / 10.0) * 100)%"></div>
                    </div>
                    <h4 class="text-muted small">Technical Quality</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageTechnicalQuality / 10.0) * 100)%"></div>
                    </div>
                    <h4 class="text-muted small">Support Quality</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageSupportQuality / 10.0) * 100)%"></div>
                    </div>
                    <h4 class="text-muted small">Over All Satisfication</h4>
                    <div class="progress-container">
                        <div class="progress-bar" data-progress="@((Model.Course.AverageOverallSatisfaction / 10.0) * 100)%"></div>
                    </div>
                </ul>
            </div>






               </div>
                    <!-- END FILTERS -->
                    <!-- BEGIN RESULT -->



                </div>

    <div class="container grid-body">
        <div class="row">
            <div class="col-md-3 mt-4">
                <button class="btn btn-dark mb-3 w-100 d-lg-none" id="filter-toggle">Filter</button>
                <div class="sidebar d-none d-lg-block">
                    <div class="filter-section">
                        <h3>Filters</h3>
                    </div>
                    <div class="filter-section">
                        <h4>
                            Ratings
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M7 10L12 15L17 10" stroke="#333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </h4>
                        <div class="filter-options">
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="4.5" data-filter-type="rating" />
                                <label class="form-check-label">
                                    <i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-half-empty" style="color:red;"></i> 4.5 & up (2,046)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="4.0" data-filter-type="rating" />
                                <label class="form-check-label">
                                    <i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-o"></i> 4.0 & up (3,734)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="3.5" data-filter-type="rating" />
                                <label class="form-check-label">
                                    <i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-half-empty" style="color:red;"></i><i class="fa fa-star-o"></i> 3.5 & up (4,403)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="3.0" data-filter-type="rating" />
                                <label class="form-check-label">
                                    <i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star-o"></i><i class="fa fa-star-o"></i> 3.0 & up (4,632)
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="filter-section">
                        <h4>
                            Sort by date
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M7 10L12 15L17 10" stroke="#333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </h4>
                        <div class="filter-options">
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="newest" data-filter-type="date" />
                                <label class="form-check-label">
                                    Newest
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input rating-filter" type="checkbox" value="oldest" data-filter-type="date" />
                                <label class="form-check-label">
                                    Oldest
                                </label>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
            <div id="reviews-section" class="col-md-9 ">
                <partial name="_ReviewPartial" model="Model.PaginatedReviews"></partial>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        document.getElementById('show-claim-form').addEventListener('click', function (event) {
            event.preventDefault();
            document.getElementById('claim-form').style.display = 'block';
        });
    </script>
    <script>
        $(document).ready(function () {
            let originalReviewList = $("#reviews-section").html();

            $("#filter-toggle").click(function () {
                $(".sidebar").toggleClass("d-none");
            });

            $(".filter-section h4").click(function () {
                let options = $(this).next(".filter-options");
                let svg = $(this).find("svg");
                options.slideToggle(200);
                if (
                    svg.css("transform") == "none" ||
                    svg.css("transform") == "matrix(1, 0, 0, 1, 0, 0)"
                ) {
                    svg.css("transform", "rotate(180deg)");
                } else {
                    svg.css("transform", "rotate(0deg)");
                }
            });

            // Submit filter form
            $(".filter-section input[type='checkbox']").change(function () {
                let selectedRatings = $(".filter-section input[type='checkbox'][data-filter-type='rating']:checked").map(function () {
                    return $(this).val();
                }).get();

                let selectedSortDates = $(".filter-section input[type='checkbox'][data-filter-type='date']:checked").map(function () {
                    return $(this).val();
                }).get();

                // Construct the URL with selected ratings and sort dates
                let ratingsQuery = selectedRatings.length > 0 ? `ratings=${selectedRatings.join(',')}` : '';
                let sortDatesQuery = selectedSortDates.length > 0 ? `sortDates=${selectedSortDates.join(',')}` : '';

                let queryParams = [];
                if (ratingsQuery) queryParams.push(ratingsQuery);
                if (sortDatesQuery) queryParams.push(sortDatesQuery);

                let queryString = queryParams.join('&');
                let url = `@Url.Action("Details", "course")?id=${@Model.Course.CourseId}&${queryString}`;

                window.location.href = url;
            });

        });




    </script>
    <script>
        $('.btn').click(function () {
            $('.collapse-content').toggle();
        });

        // Toggle "See More" functionality
        $(".see-more").click(function () {
            const moreText = $(this).siblings(".more-text");
            if (moreText.is(":visible")) {
                $(this).text("...See More");
            } else {
                $(this).text("...See Less");
            }
            moreText.toggle();
        });
        $(".progress-bar").each(function () {
            const progress = $(this).data("progress");
            $(this).css("width", progress);
        });
    </script>
    
}

